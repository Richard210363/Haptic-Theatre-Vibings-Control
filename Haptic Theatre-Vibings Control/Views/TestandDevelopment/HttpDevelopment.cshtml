@using Haptic_Theatre_Vibings_Control.Classes
@model Haptic_Theatre_Vibings_Control.Models.HttpViewModel

@{
    ViewBag.Title = "Development";
}

@Html.Hidden("view", @"~\Views\TestandDevelopment\HttpDevelopment.cshtml")

<div class="jumbotron">
    <h1>Http Development</h1>
    <ol class="breadcrumb">
        <li>@Html.ActionLink("Home", "Index", "Home")</li>
        <li>@Html.ActionLink("Development", "Index", "TestandDevelopment")</li>
        <li class="active">Http Development</li>
    </ol>
</div>

<div class="row">
    @*Area 1  *@
    <div class="col-md-4">

        <div class="panel panel-default">
            <div class="panel-body">
                <h3>TCP/IP Commands</h3>
            </div>
        </div>
        <div>
            @using (Html.BeginForm("SendTcpMessage", "TestandDevelopment", FormMethod.Post, new { id = "TCPForm"}))
            {
                <h4>Request</h4>
                @Html.TextBoxFor(m => m.HttpRequest, new { @class = "form-control input-lg" })
                <h4>Port Nunber</h4>
                @Html.TextBoxFor(m => m.HttpPortNumber, new { @class = "form-control input-sm" })
                @Html.RadioButtonFor(model => model.HttpRequestType, HttpRequestType.Get, new {@Id = "get"})
                <label for="get">Get</label>
                @Html.RadioButtonFor(model => model.HttpRequestType, HttpRequestType.Post, new {@Id = "post"})
                <label for="post">Post</label>

                <p></p>
                <input type="submit" id="TCPSubmit" value="Send Request" />
            }

        </div>
        <p>
            <h4>Result</h4>
            <div id="resultPaneTCP">
                @Html.Partial("_HttpResponse", Model)
            </div>
        </p>
    </div>

    @*Area 2  *@
    <div class="col-md-4">

        <div class="panel panel-default">
            <div class="panel-body">
                <h3>UDP Commands<br/></h3>
            </div>
        </div>

        
        <div>
            @using (Html.BeginForm("SendUdpBroadcast", "TestandDevelopment", FormMethod.Post, new { id = "UDPForm" }))
            {
                <h4>Command</h4>
                @Html.TextBoxFor(m => m.HttpRequest, new {@class = "form-control input-lg" })
                <h4>Port Nunber</h4>
                @Html.TextBoxFor(m => m.HttpPortNumber, new { @class = "form-control input-sm" })

                <p></p>
                <input type="submit" id="UDPSubmit" value="Send Request"/>
            }
        </div>
    </div>

    @*Area 3  *@
    <div class="col-md-4">

        <div class="panel panel-default">
            <div class="panel-body">
                <h3>Vibing Emulator<br/>
                </h3>
            </div>
        </div>
        <p></p>
        <input type="button" id="EmulatorSubmit" value="Receive Messages" />
        <p>
            <h4>Message Received</h4>
            <div id="receivePaneEmulator">
                @Html.Partial("_HttpResponse", Model)
            </div>
        </p>
    </div>

</div>

@Scripts.Render("~/bundles/jquery")

<script type="text/javascript">

    $(function () {

        $('#TCPSubmit').click(function (event) {
            //alert("tcp");
            $('#resultPaneTCP').html("<div class='spinner'><div class='dot1'></div><div class='dot2'></div></div>");
            event.preventDefault();
            $.ajax({
                url: "@Url.Action("SendTcpMessage", "TestandDevelopment")",
                type: "POST",
                data: $('#TCPForm').serialize(),
                datatype: "text",
                success: function (data) {
                    $('#resultPaneTCP').html(data);
                }
            });
            return false;
        });

        $('#UDPSubmit').click(function (event) {
            //alert("udp");
            $('#resultPaneUDP').html("<div class='spinner'><div class='dot1'></div><div class='dot2'></div></div>");
            event.preventDefault();
            $.ajax({
                url: "@Url.Action("SendUdpBroadcast", "TestandDevelopment")",
                type: "POST",
                data: $('#UDPForm').serialize(),
                datatype: "text",
                success: function (data) {}
            });
            return false;
        });

        function getUDPMessages() {
            $.ajax({
                         url: "@Url.Action("ReceiveUDPMessage", "TestandDevelopment")",
                        type: "POST",
                        data: $('#UDPForm').serialize(),
                        datatype: "text",
                        success: function (data) {
                                $('#receivePaneEmulator').html(data);
                        }   
                });
        }

        //$('#EmulatorSubmit').click(function (event) {
        //    var udpReceiveTimer = setInterval(getUDPMessages, 100);
        //    $('#EmulatorSubmit').attr('value', 'Stop Receiving');
        //});



        $('#EmulatorSubmit').click(function (event) {

            var udpReceiveTimer;

            if ($(this).val() == "Receive Messages") {
                udpReceiveTimer = setInterval(getUDPMessages, 100);
                $('#EmulatorSubmit').attr('value', 'Stop Receiving');
            } else {
                clearInterval(udpReceiveTimer);
                $('#EmulatorSubmit').attr('value', 'Receive Messages');
            }
        });

    });

</script>

